<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Sash-PC" name="com.example.tests.ContactCreationTests" tests="3" failures="0" timestamp="1 Feb 2014 15:30:24 GMT" time="37.966" errors="2">
  <testcase name="testContactCreationWithValidData" time="2.491" classname="com.example.tests.ContactCreationTests"/>
  <testcase name="testContactCreationWithValidData" time="32.709" classname="com.example.tests.ContactCreationTests">
    <error type="java.lang.AssertionError" message="
Expected: &lt;[ContactData [firstName=test873486234, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=, address=test1282290443, homePhoneFirst=test1244455320, mobilePhone=test-459602029, workPhone=test-1864402878, mailFirst=test1443625023, mailSecond=test-280092579, birthDay=1, birthMonth=May, birthYear=1987, groupForContact=-, addressSecond=test2123987113, homePhoneSecond=], ContactData [firstName=test-1283264726, lastName=test-1207507128, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1994343413, lastName=test-1736182311, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-2099867115, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-231021606, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-2109939546, lastName=test-345479284, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-738292072, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test161520597, lastName=test1316038168, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-208551501, lastName=test380818688, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test943332853, lastName=test997308321, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=]]&gt;
     but: was &lt;[ContactData [firstName=, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test873486234, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1283264726, lastName=test-1207507128, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1994343413, lastName=test-1736182311, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-2099867115, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-231021606, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-2109939546, lastName=test-345479284, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-738292072, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test161520597, lastName=test1316038168, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-208551501, lastName=test380818688, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test943332853, lastName=test997308321, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=]]&gt;">
      <![CDATA[java.lang.AssertionError: 
Expected: <[ContactData [firstName=test873486234, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=, address=test1282290443, homePhoneFirst=test1244455320, mobilePhone=test-459602029, workPhone=test-1864402878, mailFirst=test1443625023, mailSecond=test-280092579, birthDay=1, birthMonth=May, birthYear=1987, groupForContact=-, addressSecond=test2123987113, homePhoneSecond=], ContactData [firstName=test-1283264726, lastName=test-1207507128, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1994343413, lastName=test-1736182311, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-2099867115, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-231021606, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-2109939546, lastName=test-345479284, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-738292072, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test161520597, lastName=test1316038168, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-208551501, lastName=test380818688, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test943332853, lastName=test997308321, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=]]]]><![CDATA[>
     but: was <[ContactData [firstName=, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test873486234, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1283264726, lastName=test-1207507128, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1994343413, lastName=test-1736182311, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-2099867115, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-231021606, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-2109939546, lastName=test-345479284, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-738292072, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test161520597, lastName=test1316038168, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-208551501, lastName=test380818688, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test943332853, lastName=test997308321, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=]]]]><![CDATA[>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.junit.Assert.assertThat(Assert.java:865)
	at org.junit.Assert.assertThat(Assert.java:832)
	at com.example.tests.ContactCreationTests.testContactCreationWithValidData(ContactCreationTests.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
    </error>
  </testcase> <!-- testContactCreationWithValidData -->
  <testcase name="testContactCreationWithValidData" time="2.766" classname="com.example.tests.ContactCreationTests">
    <error type="java.lang.AssertionError" message="
Expected: &lt;[ContactData [firstName=, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test873486234, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=, address=test-53405844, homePhoneFirst=, mobilePhone=test1505820133, workPhone=test-1963208783, mailFirst=test-1680539534, mailSecond=, birthDay=1, birthMonth=May, birthYear=1987, groupForContact=-, addressSecond=, homePhoneSecond=test-2122299833], ContactData [firstName=test-1283264726, lastName=test-1207507128, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1994343413, lastName=test-1736182311, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-2099867115, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-231021606, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-2109939546, lastName=test-345479284, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-738292072, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test161520597, lastName=test1316038168, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test1138678772, lastName=test1341866233, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-208551501, lastName=test380818688, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test943332853, lastName=test997308321, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=]]&gt;
     but: was &lt;[ContactData [firstName=, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test873486234, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1283264726, lastName=test-1207507128, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1994343413, lastName=test-1736182311, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-2099867115, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-231021606, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-2109939546, lastName=test-345479284, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-738292072, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test161520597, lastName=test1316038168, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test1138678772, lastName=test1341866233, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-208551501, lastName=test380818688, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test943332853, lastName=test997308321, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=]]&gt;">
      <![CDATA[java.lang.AssertionError: 
Expected: <[ContactData [firstName=, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test873486234, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=, address=test-53405844, homePhoneFirst=, mobilePhone=test1505820133, workPhone=test-1963208783, mailFirst=test-1680539534, mailSecond=, birthDay=1, birthMonth=May, birthYear=1987, groupForContact=-, addressSecond=, homePhoneSecond=test-2122299833], ContactData [firstName=test-1283264726, lastName=test-1207507128, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1994343413, lastName=test-1736182311, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-2099867115, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-231021606, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-2109939546, lastName=test-345479284, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-738292072, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test161520597, lastName=test1316038168, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test1138678772, lastName=test1341866233, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-208551501, lastName=test380818688, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test943332853, lastName=test997308321, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=]]]]><![CDATA[>
     but: was <[ContactData [firstName=, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test873486234, lastName=, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1283264726, lastName=test-1207507128, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-1994343413, lastName=test-1736182311, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-2099867115, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-231021606, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-2109939546, lastName=test-345479284, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=, lastName=test-738292072, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test161520597, lastName=test1316038168, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test1138678772, lastName=test1341866233, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test-208551501, lastName=test380818688, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=], ContactData [firstName=test943332853, lastName=test997308321, address=, homePhoneFirst=, mobilePhone=, workPhone=, mailFirst=, mailSecond=, birthDay=, birthMonth=, birthYear=, groupForContact=, addressSecond=, homePhoneSecond=]]]]><![CDATA[>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.junit.Assert.assertThat(Assert.java:865)
	at org.junit.Assert.assertThat(Assert.java:832)
	at com.example.tests.ContactCreationTests.testContactCreationWithValidData(ContactCreationTests.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
    </error>
  </testcase> <!-- testContactCreationWithValidData -->
</testsuite> <!-- com.example.tests.ContactCreationTests -->
